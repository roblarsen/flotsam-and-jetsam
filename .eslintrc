{
        "env": {
            "browser": true,     // browser global variables.
            "jquery": true
        },

        "globals": {
            "angular": true
        },
        "rules": {
            ////////// Possible Errors //////////

            "no-comma-dangle": 1,         // disallow trailing commas in object literals
            "no-cond-assign": 0,          // disallow assignment in conditional expressions
            "no-console": 1,              // disallow use of console (off by default in the node environment)
            "no-dupe-keys": 1,            // disallow duplicate keys when creating object literals
            "no-empty": 1,                // disallow empty statements
            "no-extra-boolean-cast": 1,   // disallow double-negation boolean casts in a boolean context
            "no-irregular-whitespace": 1, // disallow irregular whitespace outside of strings and comments
            "no-unreachable": 1,          // disallow unreachable statements after a return, throw, continue, or break statement
            "valid-jsdoc": 1,             // Ensure JSDoc comments are valid (off by default)
            "valid-typeof": 1,            // Ensure that the results of typeof are compared against a valid string

            ////////// Best Practices //////////

            "complexity": 1,            // specify the maximum cyclomatic complexity allowed in a program (off by default)
            "curly": 1,                 // specify curly brace conventions for all control statements
            "dot-notation": 0,          // encourages use of dot notation whenever possible
            "eqeqeq": 1,                // require the use of === and !==
            "guard-for-in": 1,          // make sure for-in loops have an if statement (off by default)
            "no-alert": 1,              // disallow the use of alert, confirm, and prompt
            "no-caller": 1,             // disallow use of arguments.caller or arguments.callee
            "no-eq-null": 1,            // disallow comparisons to null without a type-checking operator (off by default)
            "no-eval": 1,               // disallow use of eval()
            "no-extend-native": 1,      // disallow adding to native types
            "no-extra-bind": 1,         // disallow unnecessary function binding
            "no-implied-eval": 1,       // disallow use of eval()-like methods
            "no-loop-func": 1,          // disallow creation of functions within loops
            "no-native-reassign": 1,    // disallow reassignments of native objects
            "no-proto": 1,              // disallow usage of __proto__ property
            "yoda": 1,                  // require or disallow Yoda conditions



            ////////// Variables //////////

            "no-undef": 1,                    // disallow use of undeclared variables unless mentioned in a /*global */ block
            "no-unused-vars": 1,              // disallow declaration of variables that are not used in the code
           
            ////////// Stylistic Issues //////////

            "brace-style": 1,               // enforce one true brace style (off by default)
            "camelcase": 1,                 // require camel case names
            "no-mixed-spaces-and-tabs": 1,  // disallow mixed spaces and tabs for indentation
            "no-multiple-empty-lines": 1,   // disallow multiple empty lines (off by default)
            "no-nested-ternary": 1,         // disallow nested ternary expressions (off by default)
            "no-new-object": 1,             // disallow use of the Object constructor
            "no-space-before-semi": 1,      // disallow space before semicolon
            "no-ternary": 1,                // disallow the use of ternary operators (off by default)
            "no-trailing-spaces": 1,        // disallow trailing whitespace at the end of lines
            "no-underscore-dangle": 1,               // require quotes around object literal property names (off by default)
            "quotes": "double",                    // specify whether double or single quotes should be used
            "semi": 1,                      // require or disallow use of semicolons instead of ASI
            "space-after-function-name": 1, // require a space after function names (off by default)
            "space-after-keywords": 1,      // require a space after certain keywords (off by default)
            "space-before-blocks": 1,       // require or disallow space before blocks (off by default)
            "space-in-brackets": 1,         // require or disallow spaces inside brackets (off by default)
            "space-in-parens": 1,           // require or disallow spaces inside parentheses (off by default)
            "space-infix-ops": 1,           // require spaces around operators
            "space-return-throw-case": 1   // require a space after return, throw, and case
        }
    }